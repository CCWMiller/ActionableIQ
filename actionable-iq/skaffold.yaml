apiVersion: skaffold/v4beta7 # Ensure this version is supported by Cloud Deploy
kind: Config
metadata:
  name: actionable-iq-deployment # Name for this Skaffold configuration
build:
  # Defines the artifacts (images) Skaffold knows about.
  # The actual build happens in Cloud Build, but Skaffold needs this mapping.
  artifacts:
      # Frontend artifact
    - image: ${_REGION}-docker.pkg.dev/$PROJECT_ID/frontend-repo/frontend-app
      context: client # Path to the Dockerfile context relative to skaffold.yaml
      # Backend artifact
    - image: ${_REGION}-docker.pkg.dev/$PROJECT_ID/backend-repo/backend-app
      context: server # Path to the Dockerfile context relative to skaffold.yaml
  # Specifies that Google Cloud Build is responsible for building/tagging.
  # Cloud Deploy uses this info to find the images passed via '--images' flag.
  googleCloudBuild:
    projectId: $PROJECT_ID # Uses the default project from gcloud config

# Defines how to deploy the application
deploy:
  # Specifies Cloud Run as the deployment target platform
  cloudrun: {}

# Defines the manifests (service definitions) to deploy
manifests:
  # Uses raw YAML files for service definitions
  rawYaml:
    - service-frontend.yaml
    - service-backend.yaml

# Defines different configurations for specific environments (stages)
profiles:
    # Configuration for the 'staging' stage in the Cloud Deploy pipeline
  - name: staging
    patches:
        # Patch frontend service: Set API_URL env var (if defined in service-frontend.yaml)
        # Assumes API_URL is the first env var (index 0). Adjust if needed.
      - op: replace
        path: /spec/template/spec/containers/0/env/0/value
        value: "https://staging-backend-service-url" # Replace with ACTUAL staging backend URL after first deployment

        # Patch backend service: Set ASPNETCORE_ENVIRONMENT to Staging
        # Assumes ASPNETCORE_ENVIRONMENT is the first env var (index 0). Adjust if needed.
      - op: replace
        path: /spec/template/spec/containers/0/env/0/value
        value: "Staging"
    # Re-list manifests to ensure patches apply correctly within the profile
    manifests:
     rawYaml:
        - service-frontend.yaml
        - service-backend.yaml

    # Configuration for the 'production' stage in the Cloud Deploy pipeline
  - name: production
    patches:
        # Patch frontend service: Set API_URL env var (if defined)
        # Assumes API_URL is the first env var (index 0).
      - op: replace
        path: /spec/template/spec/containers/0/env/0/value
        value: "https://production-backend-service-url" # Replace with ACTUAL production backend URL

        # Patch backend service: Set ASPNETCORE_ENVIRONMENT to Production (already default, but explicit)
        # Assumes ASPNETCORE_ENVIRONMENT is the first env var (index 0).
      - op: replace
        path: /spec/template/spec/containers/0/env/0/value
        value: "Production"
    # Re-list manifests
    manifests:
     rawYaml:
        - service-frontend.yaml
        - service-backend.yaml