apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: backend-service
  # Service-level annotations (if any are truly service-level) could go here
  # For example, if you were setting a global description for the service.
  # Knative maxScale CAN be here, but for Cloud Run, it's often better on the template for clarity.
  labels:
    delivery-pipeline-id: actionable-iq-pipeline
    location: us-east5
    managed-by: google-cloud-deploy
    project-id: actionableiq
    target-id: backend-prod
spec:
  template:
    metadata: # <--- METADATA FOR THE REVISION TEMPLATE
      name: backend-prod-rev-v2 # Optional: Revision name hint (ensure this is unique too)
      annotations:
        # Cloud Run specific autoscaling for the REVISION
        run.googleapis.com/max-instances: "20" # Preferred Cloud Run way for revision max scaling
        # Your uniqueness annotation for the REVISION
        clouddeploy.googleapis.com/prod-rollout-version: "prod-backend-v2"
    spec:
      serviceAccountName: backend-service-runner@actionableiq.iam.gserviceaccount.com
      containers:
      - image: backend-image
        # ... rest of your backend container spec (ports, env, secrets, resources, startupProbe) ...
        # Ensure ASPNETCORE_ENVIRONMENT is "Production"
        # Ensure Authentication__Google__RedirectUri points to the *staging* frontend URL for this first pass
        env:
        - name: ASPNETCORE_URLS
          value: "http://+:8080"
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        # ... (all your other env vars and secretKeyRefs from the working staging YAML)
        # Make sure Authentication__Google__RedirectUri is:
        - name: Authentication__Google__RedirectUri
          value: "https://frontend-service-788583965739.us-east5.run.app" # STAGING frontend URL for now
        # ...
  traffic:
  - latestRevision: true
    percent: 100