apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: backend-service # Or backend-service-staging, ensure this name is correct for your staging service
  labels:
    # Add any labels consistent with your setup, for example:
    # app: backend
    # environment: staging
spec: # This is the spec for the Service resource
  template: # This defines the template for new Revisions
    metadata:
      # Optional: Revision-specific annotations or labels can go here
      # annotations:
      #   autoscaling.knative.dev/maxScale: '10' # Example
      # labels:
      #   version: v1.0.0 # Example
    spec: # This is the spec for the Revision template (container, ports, env, etc.)
      serviceAccountName: 788583965739-compute@developer.gserviceaccount.com
      containers:
      - image: backend-image # Skaffold will replace this
        # NO command or args override here - let the Dockerfile's ENTRYPOINT run
        ports:
        - name: http1
          containerPort: 8080
        env:
          - name: ASPNETCORE_URLS # This will be used/overridden by PORT from Cloud Run + Program.cs
            value: "http://+:8080" # Keep for clarity or local Kestrel behavior if PORT isn't set
          # It's good practice to also define ASPNETCORE_ENVIRONMENT for staging
          - name: ASPNETCORE_ENVIRONMENT
            value: "Staging" # Or "Development" if your app uses that for staging behavior
          - name: MAILGUN_API_KEY
            valueFrom:
              secretKeyRef:
                name: mailgun-api-key
                key: latest
          - name: ConnectionStrings__DefaultConnection
            valueFrom:
              secretKeyRef:
                name: actionableiq-db-connection-string
                key: latest
        resources:
          limits:
            cpu: 1000m # Adjust as needed for staging
            memory: 1Gi # Adjust as needed for staging
        startupProbe:
          initialDelaySeconds: 60 # Adjust if needed
          timeoutSeconds: 5
          periodSeconds: 15
          failureThreshold: 24
          tcpSocket:
            port: 8080 # This must match the containerPort and what your app listens on
  traffic:
  - latestRevision: true
    percent: 100